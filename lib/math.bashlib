#  math.bashlib - library functions for math (operations)

:<<COPYRIGHT

Copyright (C) 2012 Frank Scheiner

The program is distributed under the terms of the GNU General Public License

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.

COPYRIGHT

################################################################################
#  INCLUDES
################################################################################

:<<INCLUDE
INCLUDE

################################################################################
#  VARIABLES
################################################################################

readonly _math_Version="0.1.0"

################################################################################
#  FUNCTIONS
################################################################################

:<<FUNCTIONS
math/average
math/
FUNCTIONS


math/getArithmeticMean()
{
	#  determines the arithmetic mean of the provided values
	#
	#  usage:
	#+ getArithmeticMean < valuesFile
	#+ echo -e "value1\nvalue2[\nvalue3[\n...]]" | getArithmeticMean

	local values=""

	local field=0
	
	local value=""

	local totalValue=0

	#  determine number of decimals to be used by "bc"
	local scale=0

	while read value; do
		values[$field]=$value
	
		totalValue=$(( $totalValue + $value ))

		field=$(( $field + 1 ))
	done

	local totalNumberOfValues=${#values[*]}

	local arithmeticMean=$( echo "scale=$scale; $totalValue/$totalNumberOfValues" | bc )

	echo $arithmeticMean
}

math/getSum()
{
        local field=0

        local value=""

        local totalValue=0

        while read value; do
                if [[ $totalValue -eq 0 ]]; then
        		totalValue=$value
                else
                        totalValue=$(( $totalValue + $value ))
                fi
	done

        echo $totalValue

}

math/getRandomNumbers()
{
        local number=$1

        local count=0

        while [[ $count -lt $number ]]; do
                echo $RANDOM
                count=$(( $count + 1 ))
        done
}
